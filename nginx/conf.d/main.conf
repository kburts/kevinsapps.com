# Enable upgrading of connection (and websocket proxying) depending on the
# presence of the upgrade field in the client request header
map $http_upgrade $connection_upgrade {
  default upgrade;
  '' close;
}

# Create an upstream alias to where we've set daphne to bind to
upstream django_app_server {
  server music:8010;
}

server {
    listen 80;
    server_name kevinsapps.com www.kevinsapps.com flask.kevinsapps.com;

    location / {
        proxy_pass http://flask:5000;
    }
}

server {
    listen 80;
    server_name music.kevinsapps.com;
    charset utf-8;

    error_log /var/log/nginx/error.log info;

    location /static {
        alias /public/static;
    }

    location /media {
        alias /public/media;
    }

    location / {
        if (!-f $request_filename) {
            proxy_pass http://django_app_server;
            break;
        }
        # Require http version 1.1 to allow for upgrade requests
        proxy_http_version 1.1;
        # We want proxy_buffering off for proxying to websockets.
        proxy_buffering off;
        # http://en.wikipedia.org/wiki/X-Forwarded-For
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        # enable this if you use HTTPS:
        # proxy_set_header X-Forwarded-Proto https;
        # pass the Host: header from the client for the sake of redirects
        proxy_set_header Host $http_host;
        # We've set the Host header, so we don't need Nginx to muddle
        # about with redirects
        proxy_redirect off;

        # Depending on the request value, set the Upgrade and
        # connection headers
        proxy_set_header Upgrade $http_upgrade;

        proxy_set_header Connection $connection_upgrade;
    }

}

server {
    listen 80;
    server_name files.kevinsapps.com;

    location / {
        proxy_pass http://nextcloud:8888;
    }
}

server {
    listen 80;
    server_name blog.kevinsapps.com;

    location / {
        proxy_pass http://ghost:2368;
    }
}